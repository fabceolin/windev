- hosts: chroot
  connection: chroot
  become: true
  tasks:

    - name: install docker dependencies
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: add GPG keys
      apt_key:
        url: "{{ item }}"
        state: present
      loop:
        - https://download.docker.com/linux/ubuntu/gpg
        - https://apt.releases.hashicorp.com/gpg

    - name: Adding repository  
      apt_repository:
        repo: "{{ item }}"
        update_cache: true
      become: yes
      loop:
        - deb https://download.docker.com/linux/ubuntu focal stable
        - deb [arch=amd64] https://apt.releases.hashicorp.com focal main

    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
      become: true

    - name: Installing packages
      apt:
        name: "{{ item }}"
      become: true
      loop:
        - bridge-utils
        - containerd.io
        - curl
        - docker-ce
        - docker-ce-cli
        - git
        - gpg
        - libvirt-clients
        - libvirt-daemon-system
        - libvirt-dev
        - lsb-release
        - packer=1.6.1
        - qemu-kvm
        - rsyslog
        - software-properties-common
        - sudo
        - vagrant=2.2.16
        - vim
        - virt-manager
        - wget
    - name: Prevent vagrant and packer from being upgraded
      dpkg_selections:
         name: "{{ item }}"
         selection: hold
      loop:
        - vagrant
        - packer

    - name: Make sure that docker is active
      service:
        name: docker
        state: started
        enabled: yes

    - name: Installing requirements via pip3
      pip:
        name: ['pywinrm', 'pypsrp']
        state: latest
        executable: pip3

    - name: Installing vagrant plugin vagrant-libvirt
      shell: 'vagrant plugin install vagrant-libvirt'

    - name: Check if the windows iso exists
      stat:
        path: "./9600.16384.WINBLUE_RTM.130821-1623_X64FRE_SERVER_SOLUTION_EN-US-IRM_SSSO_X64FRE_EN-US_DV5.ISO"
      register: p

    - debug:
        msg: "{{ p }}"

    - debug:
        msg: "9600.16384.WINBLUE_RTM.130821-1623_X64FRE_SERVER_SOLUTION_EN-US-IRM_SSSO_X64FRE_EN-US_DV5.ISO file exists..."
      when: p.stat.exists

    - debug:
        msg: "9600.16384.WINBLUE_RTM.130821-1623_X64FRE_SERVER_SOLUTION_EN-US-IRM_SSSO_X64FRE_EN-US_DV5.ISO file not found"
      when: p.stat.exists == False

    - name: Download windows iso
      get_url:
        url: http://download.microsoft.com/download/8/F/7/8F7024D2-AB2A-4BE2-8406-1E3AC49C5C1F/9600.16384.WINBLUE_RTM.130821-1623_X64FRE_SERVER_SOLUTION_EN-US-IRM_SSSO_X64FRE_EN-US_DV5.ISO
        dest: '.'
      become: true
      when: p.stat.exists == False


    - name: Check if the virtio-win iso exists
      stat:
        path: virtio-win.iso
      register: p

    - debug:
        msg: "virtio-win.iso file exists..."
      when: p.stat.exists

    - debug:
        msg: "virtio-win.iso file not found"
      when: p.stat.exists == False

    - name: Download virtio-win iso
      get_url:
        url: https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/latest-virtio/virtio-win.iso
        dest: './virtio-win.iso'
      become: true
      when: p.stat.exists == False

    - name: Check if the vagrant_2.2.16_x86_64.deb exists
      stat:
        path: vagrant_2.2.16_x86_64.deb
      register: p

    - debug:
        msg: "vagrant_2.2.16_x86_64.deb file exists..."
      when: p.stat.exists

    - debug:
        msg: "vagrant_2.2.16_x86_64.deb file not found"
      when: p.stat.exists == False

    - name: Download vagrant_2.2.16_x86_64.deb
      get_url:
        url: https://releases.hashicorp.com/vagrant/2.2.16/vagrant_2.2.16_x86_64.deb 
        dest: '.'
      become: true
      when: p.stat.exists == False

    - name: Copy packer files to chroot
      copy:
        src: "{{ item  }}"
        dest: "/"
        mode: preserve
      loop:
        - answer_files
        - scripts
        - Vagrantfile
        - vagrantfile-windows_2016.template
        - win_dev-Ansible.yml
        - windows_2012_r2.json
        - startup.sh
        - Dockerfile
      tags:
        - copy

    - name: ensure custom facts directory exists
      file: >
         path=/etc/samba
         recurse=yes
         state=directory
      tags:
        - copy

    - name: Copy packer files to chroot
      copy:
        src: "{{ item  }}"
        dest: "/{{ item }}"
      loop:
        - etc/samba/smb.conf 
      tags:
        - copy
              

    - name: Packer build
      shell: 'packer build --on-error=abort --only=qemu --var iso_url=9600.16384.WINBLUE_RTM.130821-1623_X64FRE_SERVER_SOLUTION_EN-US-IRM_SSSO_X64FRE_EN-US_DV5.ISO --var iso_checksum="sha256:5813e6dfa3f362c14ff4d8502f4b8b3251996a404fbc9d55fcfa73457c7fd75a" --var headless="true" windows_2012_r2.json'
      tags:
        - packer
      
    
    - name: Packer build
      shell: 'vagrant box add win_dev-Ansible windows_2019_libvirt.box'


    - name: docker build
      shell: DOCKER_BUILDKIT=1 docker build -t ghcr.io/fabceolin/windev:qt -f Dockerfile .
      tags:
        - docker
