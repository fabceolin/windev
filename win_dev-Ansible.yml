---
- hosts: all
  # site commands windows => https://www.windows-commandline.com/
  gather_facts: true
  vars:
    ansible_user: vagrant
    ansible_password: vagrant
    ansible_connection: ssh
    ansible_port: 32022
    ansible_ssh_extra_args: '-o StricthostKeyChecking=no'
    ansible_ssh_common_args: '-o userknownhostsfile=/dev/null'
    ansible_host_key_checking: False
    ansible_shell_type: cmd
    ansible_ssh_host_key_checking: False
    ansible_paramiko_host_key_checking: False
    host_key_checking: False
    prefix: /mingw64
    ssh_host_key_checking: False
    paramiko_host_key_checking: False 
    reqpythonmods: [ xonsh, glances, windows-curses, magic-wormhole, gdown ]
    #comentario
  tasks:

   - name: Install chocolatey
     win_shell: powershell -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
     args:
       executable: cmd

   - name: Install teamviewer
     win_chocolatey:
      name: teamviewer
      state: present
      timeout: 1200
     ignore_errors: yes

   - name: Install packages
     win_chocolatey:
      name: "{{ item }}"
      state: present
      timeout: 18500
     loop:
      - 7zip.portable
      - adobereader
      - curl
      - firefox
      - GoogleChrome
      - microsoft-office-deployment
      - msys2
      - virtio-drivers
     tags:
      - packages

   - name: Install python3
     win_chocolatey:
      name: python3
      version: 3.8.10
      state: present
      force: yes
      timeout: 18500

   - name: Update pip
     win_command: c:\Python38\python.exe -m pip install --upgrade pip

   - name: Check currently installed python3 modules
     win_command: c:\Python38\Scripts\pip.exe list --format=freeze
     register: curpythonmods

   - name: Install python3 modules
     win_command: c:\Python38\python.exe -m pip install "{{ item }}"
     with_items:
       - "{{ reqpythonmods | difference(curpythonmods.stdout_lines) }}"

   - name: Set the environment variables
     win_path:
       name: PATH
       elements:
         - c:\Python38
         - c:\Python38\Scripts
         - c:\tools\msys64\usr\bin
       scope:  machine
       state: present
     tags:
       - environment

   - name: Download certificate installer
     win_shell: c:\Python38\Scripts\gdown.exe --id 1NTXgpYtAN6iat597RXBn9R4SoPMaP_6s

   - name: Downloader serpro signer
     win_shell: |
            curl https://www.serpro.gov.br/links-fixos-superiores/assinador-digital/assinador-serpro/arquivos/assinador-serpro-2-7-1-setup.exe -o assinador-serpro-2-7-1-setup.exe
            .\assinador-serpro-2-7-1-setup.exe /mode silent

   - name: Download webpki
     win_shell: |
            curl https://get.webpkiplugin.com/Downloads/2.10.3/setup-win-pt -o webpkisetup.msi
            msiexec /package webpkisetup.msi /quiet


   - name:  Download instructions to enable msi installation
     win_shell: |
             curl https://www.prajwaldesai.com/system-administrator-has-set-policies-to-prevent-installation/ -o system-administrator-has-set-policies-to-prevent-installation.html

   - name: Add a PowerShell module
     win_psmodule:
       name: "{{ item }}"
       state: present
       allow_clobber: yes
     loop:
       - pscx
     tags:
       - powershell
       - pscx

   - name: Configure the ssh service
     win_service:
       name: sshd
       start_mode: auto
       state: started
     tags:
       - ssh

   - name: Install msys2 tools to get gnu utils
     win_shell: |
      c:\tools\msys64\usr\bin\bash.exe --login -c "pacman -Sy --noconfirm --needed {{ item }}"
     loop:
      - dos2unix
      - p7zip
      - pv
      - python3-pip
      - unzip
     args:
       creates: c:/tools/msys64/mingw64/x86_64-w64-mingw32/bin/unzip.exe
     tags:
      - msys2

   - name: "Download Mesa drivers"
     ansible.windows.win_get_url:
         url: "https://github.com/pal1000/mesa-dist-win/releases/download/21.1.3/mesa3d-21.1.3-release-msvc.7z"
         dest: C:\mesa3d-21.1.3-release-msvc.7z
         force: no
     tags:
         - 3d

   - name: "Unzip the Mesa drivers"
     community.windows.win_unzip:
         src: C:\mesa3d-21.1.3-release-msvc.7z
         dest: C:\mesa\ 
         delete_archive: yes
     tags:
         - 3d

   - name: "Install Mesa drivers"
     win_shell: "c:\\tools\\msys64\\usr\\bin\\echo.exe -e -n 22\\n | c:\\tools\\msys64\\usr\\bin\\pv.exe -q -L 1 | c:\\tools\\msys64\\usr\\bin\\timeout.exe 5s c:/mesa/systemwidedeploy.cmd"
     ignore_errors: yes
     tags: 
         - 3d
         - 3d-deploy

   - name: Set 3d environment variables
     ansible.windows.win_environment:
        state: present
        name: MESA_GL_VERSION_OVERRIDE
        value: 3.2
        level: machine
     tags:
       - environment
       - 3d
       - 3d-environment

   - name: Set 3d environment variables
     ansible.windows.win_environment:
        state: present
        name: GALLIUM_DRIVER
        value: swr
        level: machine
     tags:
       - environment
       - 3d
       - 3d-environment
   
   - name: Reboot for winrm
     win_reboot:
        reboot_timeout: 18000


